spring.datasource.url=jdbc:mariadb://localhost:${SQL_PORT}/${SQL_DB}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.username=${SQL_USER}
spring.datasource.password=${SQL_PASSWORD}

spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect #spring sad its selected automaticly

spring.flyway.locations=classpath:migration
spring.flyway.enabled=false


#Hibernate search settings for lucene
#spring.jpa.properties.hibernate.search.backend.type = lucene
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem
#spring.jpa.properties.hibernate.search.backend.directory.root = ./data/index

spring.elasticsearch.uris=http://localhost:9200
spring.data.elasticsearch.repositories.enabled=true
spring.jpa.properties.hibernate.search.backend.log.json_pretty_printing = true
spring.jpa.properties.hibernate.search.backend.uris = http://localhost:9200
spring.jpa.properties.hibernate.search.backend.analysis.configurer= cz.vut.fit.archiveMaterials.backend.core.configs.CzechElasticsearchAnalysisConfigurer
spring.jpa.properties.hibernate.search.schema_management.strategy=create-or-update
spring.jpa.properties.hibernate.search.backend.schema_management.settings_file = index-settings.json
#spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform

#spring.jpa.properties.hibernate.search.schema_management.strategy=drop-and-create
management.health.elasticsearch.enabled=false

# Timeout for the connection to the Elasticsearch backend in milliseconds
#spring.jpa.properties.hibernate.search.backend.connection_timeout = 30000
#spring.jpa.properties.hibernate.search.backend.read_timeout = 30000

#spring.jpa.properties.hibernate.search.backend.max_connections = 5
#spring.jpa.properties.hibernate.search.backend.max_connections_per_route = 2


#spring.jpa.properties.hibernate.search.backend.username = name
#spring.jpa.properties.hibernate.search.backend.password = password


spring.main.allow-bean-definition-overriding=true

spring.security.filter.order=10

mail.enabled=${ENABLE_EMAIL}
backend.url=${BACKEND_URL}
frontend.url=${FRONTEND_URL}
#email
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.starttls.enable=true